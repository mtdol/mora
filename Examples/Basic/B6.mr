fn main {
    -- case statement
    Case 'c' {
        'a' -> {putLn "it was 'a'";}
        'b' -> {putLn "it was 'b'";}
        'c' -> {putLn "it was 'c'";}
        'd' -> {putLn "it was 'd'";}
    }
    
    dec c;
    -- case expr
    c <- case 'c' {
        'a' -> 'b';
        'b' -> 'c';
        'c' -> 'd';
        'd' -> 'e';
    };
    printChar $ c;

    printInt $ case 1 + 2 {
        n@2 -> n - 2;
        n@3 -> n + 1;
    } + 1;

    Case 1:2:Null {
        xs@x:y:Null -> {printInt $ x-y; printList showInt xs;}
    }

    printInt $ case False {
        True -> 1;
        False -> 0;
    };

    return 0;
}
